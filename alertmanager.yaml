apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-promethe-alertmanager
  namespace: monitor
  labels:
    app: kube-prometheus-stack-alertmanager
    app.kubernetes.io/name: kube-prometheus-stack-alertmanager
    app.kubernetes.io/version: "34.9.0"
---
apiVersion: monitoring.coreos.com/v1
kind: Alertmanager
metadata:
  name: kube-promethe-alertmanager
  namespace: monitor
  labels:
    app: kube-prometheus-stack-alertmanager
    alertmanager: kube-promethe-alertmanager
    app.kubernetes.io/version: "34.9.0"
spec:
  image: "quay.io/prometheus/alertmanager:v0.24.0"
  version: v0.24.0
  replicas: 3
  listenLocal: false
  serviceAccountName: kube-promethe-alertmanager
  # 配置域名
  externalUrl: http://kube-promethe-alertmanager:9093
  paused: false
  logFormat: "logfmt"
  logLevel:  "info"
  # 数据存储时间
  retention: "120h"
  alertmanagerConfigSelector: {}
  alertmanagerConfigNamespaceSelector: {}
  routePrefix: "/"
  securityContext:
    fsGroup: 2000
    runAsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  portName: http-web
---
apiVersion: v1
kind: Service
metadata:
  name: kube-promethe-alertmanager
  namespace: monitor
  labels:
    app: kube-prometheus-stack-alertmanager
    app.kubernetes.io/version: "34.9.0"
    self-monitor: "true"
spec:
  ports:
  - name: http-web
    port: 9093
    targetPort: 9093
    protocol: TCP
  selector:
    app.kubernetes.io/name: alertmanager
    alertmanager: kube-promethe-alertmanager
  type: "ClusterIP"

---
apiVersion: v1
kind: List
metadata:
  name: kube-promethe-alertmanager-serviceperreplica
  namespace: monitor
items:
  - apiVersion: v1
    kind: Service
    metadata:
      name: kube-promethe-alertmanager-0
      namespace: monitor
      labels:
        app: kube-prometheus-stack-alertmanager
        app.kubernetes.io/version: "34.9.0"
    spec:
      ports:
        - name: http-web
          port: 9093
          targetPort: 9093
      selector:
        app.kubernetes.io/name: alertmanager
        alertmanager: kube-promethe-alertmanager
        statefulset.kubernetes.io/pod-name: alertmanager-kube-promethe-alertmanager-0
      type: "ClusterIP"
  - apiVersion: v1
    kind: Service
    metadata:
      name: kube-promethe-alertmanager-1
      namespace: monitor
      labels:
        app: kube-prometheus-stack-alertmanager
        app.kubernetes.io/version: "34.9.0"
    spec:
      ports:
        - name: http-web
          port: 9093
          targetPort: 9093
      selector:
        app.kubernetes.io/name: alertmanager
        alertmanager: kube-promethe-alertmanager
        statefulset.kubernetes.io/pod-name: alertmanager-kube-promethe-alertmanager-1
      type: "ClusterIP"
  - apiVersion: v1
    kind: Service
    metadata:
      name: kube-promethe-alertmanager-2
      namespace: monitor
      labels:
        app: kube-prometheus-stack-alertmanager
        app.kubernetes.io/version: "34.9.0"
    spec:
      ports:
        - name: http-web
          port: 9093
          targetPort: 9093
      selector:
        app.kubernetes.io/name: alertmanager
        alertmanager: kube-promethe-alertmanager
        statefulset.kubernetes.io/pod-name: alertmanager-kube-promethe-alertmanager-2
      type: "ClusterIP"
---
apiVersion: v1
kind: Secret
metadata:
  name: alertmanager-kube-promethe-alertmanager
  namespace: monitor
  labels:
    app: kube-prometheus-stack-alertmanager
    app.kubernetes.io/version: "34.9.0"
stringData:
  alertmanager.yaml: |
    global:
      # 在 'resolve_timeout'时间没有报警的 情况下声明为已解决的时间.
      resolve_timeout: 5m
    receivers:
    - name: "feishu-default"
      webhook_configs:
      - url: "https://open.feishu.cn/open-apis/bot/v2/hook/xxxxxxx"
    route:
      group_by:
      - job
      - alertname
      # 当第一组报警发送后，等待'group_interval'时间来发送新的一组报警信息。
      group_interval: 5m
      # 当一个新的报警分组被创建后, 需要等待至少 'group_wait' 时间收集告警, 然后发送这组告警。
      group_wait: 30s
      receiver: "feishu-default"
      # 如果一个报警信息已经发送成功了, 等待'repeat_interval'时间来重新发送他们。
      repeat_interval: 24h
      routes:
      # match 与 match_re 将弃用, 使用 matchers 的写法如下
      - matchers:
          - alertname="Watchdog"
        receiver: "feishu-default"
      # templates:
      # - /etc/alertmanager/config/*.tmpl%
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-promethe-alertmanager
  namespace: monitor
  labels:
    app: kube-prometheus-stack-alertmanager
    app.kubernetes.io/version: "34.9.0"
spec:
  selector:
    matchLabels:
      app: kube-prometheus-stack-alertmanager
      self-monitor: "true"
  namespaceSelector:
    matchNames:
      - "monitor"
  endpoints:
  - port: http-web
    path: "/metrics"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: alertmanager
  namespace: monitor
spec:
  ingressClassName: nginx
  rules:
  - host: alertmanager.jicki.cn
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kube-promethe-alertmanager
            port:
              number: 9093
