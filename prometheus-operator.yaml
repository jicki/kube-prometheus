# kubectl apply -f crds/ --force-conflicts=true --server-side
apiVersion: v1
kind: Namespace
metadata:
  name: monitor
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-promethe-operator
  namespace: monitor
  labels:
    app: kube-prometheus-stack-operator
    app.kubernetes.io/name: kube-prometheus-stack-prometheus-operator
    app.kubernetes.io/component: prometheus-operator
    app.kubernetes.io/version: "34.9.0"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-promethe-operator
  labels:
    app: kube-prometheus-stack-operator
    app.kubernetes.io/version: "34.9.0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-promethe-operator
subjects:
- kind: ServiceAccount
  name: kube-promethe-operator
  namespace: monitor
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-promethe-operator
  labels:
    app: kube-prometheus-stack-operator
    app.kubernetes.io/version: "34.9.0"
rules:
- apiGroups:
  - monitoring.coreos.com
  resources:
  - alertmanagers
  - alertmanagers/finalizers
  - alertmanagerconfigs
  - prometheuses
  - prometheuses/finalizers
  - thanosrulers
  - thanosrulers/finalizers
  - servicemonitors
  - podmonitors
  - probes
  - prometheusrules
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - delete
- apiGroups:
  - ""
  resources:
  - services
  - services/finalizers
  - endpoints
  verbs:
  - get
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-promethe-operator
  namespace: monitor
  labels:
    app: kube-prometheus-stack-operator
    app.kubernetes.io/version: "34.9.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-prometheus-stack-operator
  template:
    metadata:
      labels:
        app: kube-prometheus-stack-operator
        app.kubernetes.io/version: "34.9.0"
    spec:
      containers:
        - name: kube-prometheus-stack
          image: "reg.deeproute.ai/deeproute-public/prometheus-operator:v0.55.1"
          imagePullPolicy: "IfNotPresent"
          args:
            - --log-format=logfmt
            - --log-level=info
            - --kubelet-service=kube-system/kube-promethe-kubelet
            - --localhost=127.0.0.1
            - --prometheus-config-reloader=reg.deeproute.ai/deeproute-public/prometheus-config-reloader:v0.55.1
            - --config-reloader-cpu-request=200m
            - --config-reloader-cpu-limit=200m
            - --config-reloader-memory-request=50Mi
            - --config-reloader-memory-limit=50Mi
          ports:
            - containerPort: 8080
              name: http
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: kube-promethe-operator
---
apiVersion: v1
kind: Service
metadata:
  name: kube-promethe-operator
  namespace: monitor
  labels:
    app: kube-prometheus-stack-operator
    app.kubernetes.io/version: "34.9.0"
    self-monitor: "true"
spec:
  ports:
  - name: http
    port: 8080
    targetPort: http
  selector:
    app: kube-prometheus-stack-operator
  type: "ClusterIP"

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-promethe-operator
  namespace: monitor
  labels:
    app: kube-prometheus-stack-operator
    app.kubernetes.io/version: "34.9.0"
spec:
  endpoints:
  - port: http
    path: "/metrics"
  selector:
    matchLabels:
      app: kube-prometheus-stack-operator
      self-monitor: "true"
  namespaceSelector:
    matchNames:
      - "monitor"
